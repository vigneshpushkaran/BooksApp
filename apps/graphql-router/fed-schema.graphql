
schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Mutation {
  login: loginId! @join__field(graph: LOGIN)
  signUp(userName: String): singUpResult @join__field(graph: LOGIN)
}

type Query {
  hello: String @join__field(graph: LOGIN)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

type error {
  code: String!
  message: String!
}

scalar join__FieldSet

enum join__Graph {
  LOGIN @join__graph(name: "login" url: "http://localhost:5001/graphql")
}

type loginId {
  id: String!
  userName: String!
}

type signUp {
  id: String!
  message: String!
  status: String!
  userName: String!
}

union singUpResult = error | signUp
